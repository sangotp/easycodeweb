@page "/course/details/{id:int?}"
@model EasyCodeAcademy.Web.Pages.Courses.DetailsModel
@{
    ViewData["Title"] = "EasyCode Academy - Course Details";
    bool isOwned = false;
    bool isComment = false;
    string UserName = "Null";
}

@using Microsoft.AspNetCore.Identity
@using EasyCodeAcademy.Web.Models
@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager

<div class="content__container">
    <div class="breadcrumb">
        <ul class="breadcrumb__list">
            <li class="breadcrumb__list__item">
                <a href="/" class="breadcrumb-link">Home</a>
                <i class="fa-solid fa-angle-right"></i>
            </li>
            <li class="breadcrumb__list__item">
                <a href="/courses" class="breadcrumb-link">Courses</a>
                <i class="fa-solid fa-angle-right"></i>
            </li>
            @*            <li class="breadcrumb__list__item breadcrumb-current">Unity 3D Development</li>*@
            <li class="breadcrumb__list__item breadcrumb-current">@Model.Course.CourseName</li>
        </ul>
    </div>

    @*    <div class="course-details-info">
    <div class="course-info">
    <div class="course-info__title sub-heading">Complete C# Unity Game Developer 3D</div>
    <div class="course-info__author text-small">
    Author: <a href="#" class="course-author">Thanh Sang</a>
    </div>
    <div class="course-info__vote text-small mt-8">
    <i class="fa-solid fa-star"></i>
    <i class="fa-solid fa-star"></i>
    <i class="fa-solid fa-star"></i>
    <i class="fa-solid fa-star"></i>
    <i class="fa-solid fa-star-half"></i>
    <a href="#" class="course-vote-total">(700 rating)</a>
    </div>
    <div class="course-info__language text-medium mt-8">
    Language: <button type="button" class="course-language btn-restart">English</button>
    </div>
    <div class="course-info__total-time text-medium mt-8">
    Complete Course: <a href="#" class="course-total-time">20 hours / total</a>
    </div>
    <div class="course-info__price mt-16">
    <span class="course-price-normal text-heading">$32.5</span>
    <span class="course-price-sales text-heading">$19.9</span>
    <span class="course-price-status text-small">Best Sales</span>
    </div>
    <div class="course-info__action mt-32">
    <button type="button" class="course-add-inventory btn-restart">+ Inventory</button>
    <a href="#" class="course-purchase">Buy Now</a>
    </div>
    </div>
    <div class="course-video">
    <div class="course-video__container">
    <img src="/Assets/img/unity.jpg" alt="Course Video" class="course-video-content" />
    <button type="button" class="course-video-play btn-restart">
    <i class="fa-solid fa-circle-play"></i>
    </button>
    </div>
    </div>
    </div>*@

    <div class="course-details-info">
        <div class="course-info">
            <div class="course-info__title sub-heading">@Model.Course.CourseName</div>
            <div class="course-info__author text-small">
                Author: <a href="#" class="course-author">EasyCode</a>
            </div>
            <div class="course-info__vote text-small mt-8">
                <i class="fa-solid fa-star"></i>
                <i class="fa-solid fa-star"></i>
                <i class="fa-solid fa-star"></i>
                <i class="fa-solid fa-star"></i>
                <i class="fa-solid fa-star-half"></i>
                <a href="#" class="course-vote-total">(0 rating)</a>
            </div>
            <div class="course-info__language text-medium mt-8">
                Language: <button type="button" class="course-language btn-restart">@Model.Course.CourseDetails.CourseLanguage</button>
            </div>
            <div class="course-info__total-time text-medium mt-8">
                Complete Course: <a href="#" class="course-total-time">0 hours / total</a>
            </div>
            <div class="course-info__price mt-16">
                <span class="course-price-normal text-heading">@Html.DisplayFor(modelItem => Model.Course.CoursePrice)$</span>
                @*<span class="course-price-sales text-heading">8.99$</span>*@
                @*<span class="course-price-status text-small">Best Sales</span>*@
            </div>
            <div class="course-info__action mt-32">
                @*                <form action="/Inventory/Add?courseid=@Model.Course.CourseId" method="post" enctype="application/x-www-form-urlencoded">
                @Html.AntiForgeryToken()
                <button type="submit" class="course-add-inventory btn-restart">+ Inventory</button>
                </form>*@
                @if (Model.Course is not null)
                {
                    @if (Model.ECAPayments is not null && Model.ECAPayments.Count > 0)
                    {
                        int countPayment = 0;
                        foreach (var payment in Model.ECAPayments)
                        {
                            ++countPayment;
                            if (payment.courseId == Model.Course.CourseId && payment.Status == 1)
                            {
                                isOwned = true;
                                <button type="button" href="#" class="course-purchase-owned btn-restart">
                                    <i class="icon-owned fa-solid fa-check mr-8"></i>Owned
                                </button>
                            }
                            else if (countPayment == Model.ECAPayments.Count)
                            {
                                <form action="/Inventory/Add?courseid=@Model.Course.CourseId&returnUrl=/course/details/@Model.Course.CourseId" method="post" enctype="application/x-www-form-urlencoded">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" href="#" class="course-purchase btn-restart">Buy Now</button>
                                </form>
                            }
                        }
                    }
                    else
                    {
                        <form action="/Inventory/Add?courseid=@Model.Course.CourseId&returnUrl=/course/details/@Model.Course.CourseId" method="post" enctype="application/x-www-form-urlencoded">
                            @Html.AntiForgeryToken()
                            <button type="submit" href="#" class="course-purchase btn-restart">Buy Now</button>
                        </form>
                    }
                }
            </div>
        </div>
        <div class="course-video">
            <div class="course-video__container">
                <img src="/Assets/uploads/@Model.Course.CourseImage" alt="Course Video" class="course-video-content" />
                <button type="button" class="course-video-play btn-restart">
                    <i class="fa-solid fa-circle-play"></i>
                </button>
            </div>
        </div>
    </div>


    <div class="course-details-content">
        <div class="course-overview">
            <div class="course-section-title text-heading">Overview</div>
            <div class="course-overview__content mt-16">
                @*                <p class="course-overview-text">
                This is the most complete certification training (+ 60 hours of videos)
                and the most recent on Udemy.
                It will allow you to become a game developer
                and master Unity as well as C# and through 10 projects.
                </p>
                <p class="course-overview-text">
                Want to learn Unity? To create games?
                To migrate from another engine? To live from your passion?
                </p>
                <p class="course-overview-text">
                This training is for you ! No need for special knowledge,
                we will see everything from A to Z!
                We'll be using the latest version of Unity for this course,
                so you'll have access to the most up-to-date training on the net!
                </p>
                <p class="course-overview-text">
                This complete training on Unity 3D will allow you to
                learn how to create 3D games with the C# programming language.
                </p>
                <p class="course-overview-text">
                This training will allow you to learn how to use Unity
                while putting your knowledge into practice immediately.
                </p>
                <p class="course-overview-text">
                Throughout this training, we will follow our common thread:
                Create a 3D platform/adventure game to learn by doing.
                There will then be 9 other projects to practice even more.
                </p>
                <p class="course-overview-text">
                We will discover everything from the beginning
                (no need for knowledge to follow this training)
                and we will go until the publication of our online game.
                </p>
                <p class="course-overview-text">
                Being a certified Unity expert ,
                I made sure to send you the best practices
                to achieve a professional quality project.
                </p>
                <p class="course-overview-text">
                I have been teaching Unity for over 10 years
                and have published many books on this software.
                </p>
                <p class="course-overview-text">
                After completing this training,
                you will be comfortable with Unity
                and you will be able to develop any type of game.
                You will also get a certificate of achievement.
                </p>*@
                @Html.Raw(Model.Course.CourseDetails.CourseOverview)
            </div>
        </div>
        <div class="course-include mt-64">
            <div class="course-section-title text-heading">Course Include</div>
            <div class="hide" id="course-include-value">@Model.Course.CourseDetails.CourseInclude</div>
            <div class="course-include__content mt-16">
                <ul class="course-include-list">
                    <li class="course-include-list__item">
                        <i class="fa-solid fa-play"></i>
                        <span class="course-time" id="course-include-time">20 hours / total</span>
                    </li>
                    <li class="course-include-list__item">
                        <i class="fa-solid fa-file"></i>
                        <span class="course-item" id="course-include-file">6 items</span>
                    </li>
                    <li class="course-include-list__item">
                        <i class="fa-solid fa-link"></i>
                        <span class="course-resource" id="course-include-resource">10 Reference Resources</span>
                    </li>
                    <li class="course-include-list__item">
                        <i class="fa-solid fa-list-ol"></i>
                        <span class="course-chapters" id="course-include-chapter">24 chapters - 260 lessons</span>
                    </li>
                    <li class="course-include-list__item">
                        <i class="fa-solid fa-table-list"></i>
                        <span lang="course-exercises" id="course-include-exercise">100 exercises / total</span>
                    </li>
                    <li class="course-include-list__item">
                        <i class="fa-solid fa-tv"></i>
                        <span class="course-access" id="course-include-access">PC / Mobile / Tivi,etc... (unlimited access)</span>
                    </li>
                    <li class="course-include-list__item">
                        <i class="fa-solid fa-trophy"></i>
                        <span class="course-certificate" id="course-include-certificate">Complete Course Certificate</span>
                    </li>
                </ul>
                @*
                <div class="course-include-item">
                <i class="fa-solid fa-play"></i>
                <span class="course-time">20 hours / total</span>
                </div>
                <div class="course-include-item">
                <i class="fa-solid fa-file"></i>
                <span class="course-item">6 items</span>
                </div>
                <div class="course-include-item">
                <i class="fa-solid fa-link"></i>
                <span class="course-resource">10 Reference Resources</span>
                </div>
                <div class="course-include-item">
                <i class="fa-solid fa-list-ol"></i>
                <span class="course-chapters">24 chapters - 260 lessons</span>
                </div>
                <div class="course-include-item">
                <i class="fa-solid fa-table-list"></i>
                <span lang="course-exercises">100 exercises / total</span>
                </div>
                <div class="course-include-item">
                <i class="fa-solid fa-tv"></i>
                <span class="course-access">PC / Mobile / Tivi,etc... (unlimited access)</span>
                </div>
                <div class="course-include-item">
                <i class="fa-solid fa-trophy"></i>
                <span class="course-certificate">Complete Course Certificate</span>
                </div>*@
            </div>
        </div>
        <div class="course-requirement mt-64">
            <div class="course-section-title text-heading">Requirement</div>
            <div class="course-requirement__content mt-16">
                <ul class="course-requirement-list ml-16">
                    @*                    <li class="course-requirement-list__item">A computer with internet access</li>
                    <li class="course-requirement-list__item">Already using software before</li>
                    <li class="course-requirement-list__item">Have basic knowledge about C#</li>
                    <li class="course-requirement-list__item">Be patient, don't jump into advanced topic</li>*@
                    @if (Model.Course.CourseDetails.CourseRequirement is not null)
                    {
                        @for (int i = 0; i < Model.Course.CourseDetails.CourseRequirement.Split(',').Length; i++)
                        {
                            <li class="course-requirement-list__item">@Model.Course.CourseDetails.CourseRequirement.Split(',')[i]</li>
                        }
                    }
                    else
                    {
                        <li class="course-requirement-list__item">Requirement Default</li>
                    }
                </ul>
            </div>
        </div>
        <div class="course-achievement mt-64">
            <div class="course-section-title text-heading">What You Will Learn:</div>
            <div class="course-achievement__content mt-16">
                <ul class="course-achievement-list">
                    @*                    <li class="course-achievement-list__item">
                    <i class="fa-regular fa-circle-check"></i>
                    <span class="course-achievement-item-text">Master Unity 3D through 10 projects</span>
                    </li>
                    <li class="course-achievement-list__item">
                    <i class="fa-regular fa-circle-check"></i>
                    <span class="course-achievement-item-text">Programming with the C# language</span>
                    </li>
                    <li class="course-achievement-list__item">
                    <i class="fa-regular fa-circle-check"></i>
                    <span class="course-achievement-item-text">Create 3D games (PC or Mobile)</span>
                    </li>
                    <li class="course-achievement-list__item">
                    <i class="fa-regular fa-circle-check"></i>
                    <span class="course-achievement-item-text">Use 3D models and animate them</span>
                    </li>
                    <li class="course-achievement-list__item">
                    <i class="fa-regular fa-circle-check"></i>
                    <span class="course-achievement-item-text">Code interactions and events</span>
                    </li>
                    <li class="course-achievement-list__item">
                    <i class="fa-regular fa-circle-check"></i>
                    <span class="course-achievement-item-text">Developing a 3D platform game</span>
                    </li>
                    <li class="course-achievement-list__item">
                    <i class="fa-regular fa-circle-check"></i>
                    <span class="course-achievement-item-text">Acquire best practices with an expert</span>
                    </li>
                    <li class="course-achievement-list__item">
                    <i class="fa-regular fa-circle-check"></i>
                    <span class="course-achievement-item-text">Get advice from a certified professional</span>
                    </li>
                    <li class="course-achievement-list__item">
                    <i class="fa-regular fa-circle-check"></i>
                    <span class="course-achievement-item-text">Practice with 10 complete projects</span>
                    </li>*@
                    @if (Model.Course.CourseDetails.CourseGain is not null)
                    {
                        for (int i = 0; i < Model.Course.CourseDetails.CourseGain.Split(',').Length; i++)
                        {
                            <li class="course-achievement-list__item">
                                <i class="fa-regular fa-circle-check"></i>
                                <span class="course-achievement-item-text">@Model.Course.CourseDetails.CourseGain.Split(',')[i]</span>
                            </li>
                        }
                    }
                </ul>

                @*                <div class="course-achievement-item">
                <i class="fa-regular fa-circle-check"></i>
                <span class="course-achievement-item-text">Master Unity 3D through 10 projects</span>
                </div>
                <div class="course-achievement-item">
                <i class="fa-regular fa-circle-check"></i>
                <span class="course-achievement-item-text">Programming with the C# language</span>
                </div>
                <div class="course-achievement-item">
                <i class="fa-regular fa-circle-check"></i>
                <span class="course-achievement-item-text">Create 3D games (PC or Mobile)</span>
                </div>
                <div class="course-achievement-item">
                <i class="fa-regular fa-circle-check"></i>
                <span class="course-achievement-item-text">Use 3D models and animate them</span>
                </div>
                <div class="course-achievement-item">
                <i class="fa-regular fa-circle-check"></i>
                <span class="course-achievement-item-text">Code interactions and events</span>
                </div>
                <div class="course-achievement-item">
                <i class="fa-regular fa-circle-check"></i>
                <span class="course-achievement-item-text">Developing a 3D platform game</span>
                </div>
                <div class="course-achievement-item">
                <i class="fa-regular fa-circle-check"></i>
                <span class="course-achievement-item-text">Acquire best practices with an expert</span>
                </div>
                <div class="course-achievement-item">
                <i class="fa-regular fa-circle-check"></i>
                <span class="course-achievement-item-text">Get advice from a certified professional</span>
                </div>
                <div class="course-achievement-item">
                <i class="fa-regular fa-circle-check"></i>
                <span class="course-achievement-item-text">Practice with 10 complete projects</span>
                </div>*@
            </div>
        </div>
        <div class="course-content mt-64">
            <div class="course-section-title text-heading">Content</div>
            <div class="course-content__container mt-16">
                <div class="course-content-summary">
                    <div class="course-content-summary__all">
                        @if (Model.Course.CourseChapters is not null)
                        {
                            if (Model.Course.CourseChapters.Count >= 0 && Model.Course.CourseChapters.Count <= 1)
                            {
                                <span class="course-summary-item">@Model.Course.CourseChapters.Count Chapter</span>
                            }
                            else if (Model.Course.CourseChapters.Count > 1)
                            {
                                <span class="course-summary-item">@Model.Course.CourseChapters.Count Chapters</span>
                            }
                        }
                        else
                        {
                            <span class="course-summary-item">0 Chapter</span>
                        }
                        @if (Model.Course.CourseChapters is not null)
                        {
                            int countlesson = 0;
                            foreach (var courseChapter in Model.Course.CourseChapters)
                            {
                                @if (courseChapter.CourseLessons is not null)
                                {
                                    countlesson += courseChapter.CourseLessons.Count;
                                }
                            }

                            if (countlesson >= 0 && countlesson <= 1)
                            {
                                <span class="course-summary-item">@countlesson lesson</span>
                            }
                            else if (countlesson > 1)
                            {
                                <span class="course-summary-item">@countlesson lessons</span>
                            }

                        }
                        else
                        {
                            <span class="course-summary-item">0 Lesson</span>
                        }

                        <span class="course-summary-item">Duration: NAN hours</span>
                    </div>
                    <div class="course-content-summary__action">
                        <button type="button" class="course-content-action btn-restart">Expand All Chapters</button>
                    </div>
                </div>
                <div class="course-content-chapter">
                    <ul class="course-chapter-list">
                        @if (Model.Course.CourseChapters is not null)
                        {
                            foreach (var courseChapter in Model.Course.CourseChapters)
                            {
                                <li class="course-chapter-list__item">
                                    <div class="courses-chapter-item-container">
                                        <div class="course-chapter-action">
                                            <i class="fa-solid fa-angle-down"></i>
                                            <button type="button" class="course-chapter-btn btn-restart">
                                                @courseChapter.Title
                                            </button>
                                        </div>
                                        <div class="course-chapter-info">
                                            <span class="course-chapter-info__item">Ready</span>
                                            <span class="course-chapter-info__item">3 Lessons</span>
                                            <span class="course-chapter-info__item">59 Minutes 05 Seconds</span>
                                        </div>
                                    </div>
                                    <ul class="course-lesson-list">
                                        @if (courseChapter.CourseLessons is not null)
                                        {
                                            if (courseChapter.CourseLessons.Count > 0)
                                            {
                                                foreach (var courseLesson in courseChapter.CourseLessons)
                                                {
                                                    <li class="course-lesson-list__item">
                                                        <div class="course-lesson-item-container">
                                                            <div class="course-lesson-action">
                                                                <i class="fa-regular fa-circle-play"></i>
                                                                @if (isOwned)
                                                                {
                                                                    <a href="/course/@Model.Course.CourseId/learn?lessonId=@courseLesson.LessonId" class="course-lesson-link">@courseLesson.Title</a>
                                                                }
                                                                else
                                                                {
                                                                    <a href="" class="course-lesson-link link-disabled disabled">@courseLesson.Title</a>
                                                                }

                                                            </div>
                                                            <div class="course-lesson-info">
                                                                <span class="course-lesson-info__item">Ready</span>
                                                                <span class="course-lesson-info__item">21:27</span>
                                                            </div>
                                                        </div>
                                                        <div class="course-lesson-expand">
                                                            @if (courseLesson.CourseExerises is not null)
                                                            {
                                                                if (courseLesson.CourseExerises.Count >= 0 && courseLesson.CourseExerises.Count <= 1)
                                                                {
                                                                    <button type="button" id="expand-exercise-btn-@courseLesson.LessonId" class="lesson-expand-exercises_btn btn-restart"><i class="fa-solid fa-network-wired"></i>@courseLesson.CourseExerises.Count Exercise</button>
                                                                }
                                                                else if (courseLesson.CourseExerises.Count > 1)
                                                                {
                                                                    <button type="button" id="expand-exercise-btn-@courseLesson.LessonId" class="lesson-expand-exercises_btn btn-restart"><i class="fa-solid fa-network-wired"></i>@courseLesson.CourseExerises.Count Exercises</button>
                                                                }
                                                            }
                                                            else
                                                            {
                                                                <button type="button" id="expand-exercise-btn-@courseLesson.LessonId" class="lesson-expand-exercises_btn btn-restart"><i class="fa-solid fa-network-wired"></i>0 Exercise</button>
                                                            }

                                                        </div>
                                                        @*Exercise*@
                                                        <ul class="course-exercise-list" id="exercise-list-@courseLesson.LessonId">
                                                            @if (courseLesson.CourseExerises is not null)
                                                            {
                                                                foreach (var courseExercise in courseLesson.CourseExerises)
                                                                {
                                                                    <li class="course-exercise-list__item">
                                                                        <div class="course-exercise-item-container">
                                                                            <div class="course-exercise-action">
                                                                                <i class="fa-solid fa-note-sticky"></i>
                                                                                @if (isOwned)
                                                                                {
                                                                                    <a href="/course/@Model.Course.CourseId/learn/@courseLesson.LessonId/exercises?exerciseId=@courseExercise.ExerciseId" class="course-exercise-link">@courseExercise.Title</a>
                                                                                }
                                                                                else
                                                                                {
                                                                                    <a href="" class="course-exercise-link link-disabled disabled">@courseExercise.Title</a>
                                                                                }

                                                                            </div>
                                                                        </div>
                                                                    </li>
                                                                }
                                                            }
                                                        </ul>
                                                    </li>
                                                }
                                            }
                                            else
                                            {
                                                <li class="course-lesson-list__item" id="not-found-lesson-item">
                                                    <div class="course-lesson-item-container">
                                                        <div class="course-lesson-action">
                                                            No Lesson Found.
                                                        </div>
                                                    </div>
                                                </li>
                                            }
                                        }
                                    </ul>
                                </li>
                            }
                        }
                        else
                        {
                            <li class="course-chapter-list__item">
                                <div class="courses-chapter-item-container">
                                    <div class="course-chapter-action" id="not-found-chapter">
                                        No Chapter Found.
                                    </div>
                                </div>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
        <div class="course-contribute mt-64">
            <div class="course-section-title text-heading">Contribute By:</div>
            <div class="course-contribute__content mt-16">
                <div class="course-contribute-member">
                    <span class="course-contribute-member__title">Member: </span>
                    <button type="button" id="author_member" class="contribute-member-btn btn-restart">Thanh Sang</button>
                    <span class="contribute-member-comma">,</span>
                    <button type="button" id="codex_member" class="contribute-member-btn btn-restart">EasyCode Academy</button>
                    @*                    <span class="contribute-member-comma">,</span>
                    <button type="button" id="W3C_member" class="contribute-member-btn btn-restart">W3C</button>*@
                </div>
                <div class="course-contribute-info">
                    <div class="course-contribute-info__container">
                        <div class="contribute-info">
                            <div class="member-contribute-info">
                                <div class="member-contribute-info__img">
                                    <img src="/Assets/img/gamedevTV.jpg" alt="Contributor Image" class="contributor-img" />
                                </div>
                            </div>
                            <div class="member-contribute-overview">
                                <div class="member-contribute-overview__item">
                                    <i class="fa-solid fa-star"></i>
                                    4.4 Trainer Quality
                                </div>
                                <div class="member-contribute-overview__item">
                                    <i class="fa-solid fa-user-group"></i>
                                    <span class="contributor-total-student">871,646 Students</span>
                                </div>
                                <div class="member-contribute-overview__item">
                                    <i class="fa-solid fa-user-graduate"></i>
                                    <span class="contributor-certificate">Bachelor Of IT Science, Master Degree</span>
                                </div>
                                <div class="member-contribute-overview__item">
                                    <i class="fa-solid fa-book-open"></i>
                                    <span class="contributor-total-courses">16 courses</span>
                                </div>
                            </div>
                        </div>
                        <div class="member-contribute-name mt-8">
                            <span class="member-contribute-name__text text-heading">Thanh Sang</span>
                        </div>
                        <div class="member-contribute-role text-heading">
                            <span class="member-contribute-role__text text-heading">Author</span>
                        </div>
                        <div class="course-contribute-info__content mt-16">
                            <p class="contributor-paragraph">
                                Passionate about programming since always,
                                I also like to share my knowledge.
                                my specialty being game development and programming ,
                                Udemy allows me to express myself and
                                share this passion with thousands of Internet users.
                                I am also the author of many books on the creation of video games.
                                <span class="contributor-paragraph-dot" id="dots">...</span>
                            </p>
                            <div id="paragraph-more">
                                <p class="contributor-paragraph-more mt-8">
                                    In the professional context, I have to work with many technologies,
                                    I develop applications, websites , software , APIs ,
                                    virtual/augmented reality experiences...
                                    My objective is to convey to you what is best
                                    in development and engineering.
                                </p>
                                <p class="contributor-paragraph-more mt-8">
                                    I publish training courses on the main game engines
                                    and programming languages ​​on the
                                    market, namely Unreal Engine , Unity 3D, Godot ,
                                    C# , WPF , ASP , Javascript , etc.
                                    I also offer tutorials on essential tools or
                                    frameworks to watch very closely.
                                    close if you don't want to be overwhelmed by technology.
                                </p>
                                <p class="contributor-paragraph-more mt-8">
                                    I attach great importance to the quality of my training.
                                    For more than 10 years I have done
                                    my best to guarantee your satisfaction.
                                    If you have any questions or requests,
                                    do not hesitate to contact me,
                                    I can produce specific tutorials on request.
                                </p>
                            </div>
                            <button type="button" class="show-paragraph-btn btn-restart" id="toggle-paragraph-btn">
                                Read more<i class="fa-solid fa-angle-down ml-8"></i>
                            </button>
                        </div>
                    </div>


                    <div class="course-contribute-info__container mt-64">
                        <div class="contribute-info">
                            <div class="member-contribute-info">
                                <div class="member-contribute-info__img">
                                    <img src="/Assets/img/Formation-Facile.jpg" alt="Contributor Image" class="contributor-img" />
                                </div>
                            </div>
                            <div class="member-contribute-overview">
                                <div class="member-contribute-overview__item">
                                    <i class="fa-solid fa-star"></i>
                                    4.7 Trainer Quality
                                </div>
                                <div class="member-contribute-overview__item">
                                    <i class="fa-solid fa-user-group"></i>
                                    <span class="contributor-total-student">12,572 Students</span>
                                </div>
                                <div class="member-contribute-overview__item">
                                    <i class="fa-solid fa-user-graduate"></i>
                                    <span class="contributor-certificate">Bachelor Of IT Science</span>
                                </div>
                                <div class="member-contribute-overview__item">
                                    <i class="fa-solid fa-book-open"></i>
                                    <span class="contributor-total-courses">18 lessons</span>
                                </div>
                            </div>
                        </div>
                        <div class="member-contribute-name mt-8">
                            <span class="member-contribute-name__text text-heading">EasyCode Academy</span>
                        </div>
                        <div class="member-contribute-role text-heading">
                            <span class="member-contribute-role__text text-heading">Support</span>
                        </div>
                        <div class="course-contribute-info__content mt-16">
                            <p class="contributor-paragraph">
                                Formation-facile FR publishes video tutorials on Udemy
                                to help you learn how to develop video games easily .

                                Discover the tutorials that will allow you to learn
                                how to use Unity , Unreal Engine , Godot or other frameworks.

                                Learn the main programming languages ​​(C#, C++, Python, Blueprint),
                                3D modeling with Blender and game engines in order to
                                become an independent video game developer .
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="course-details-rate">
        <div class="course-details-rate__overview">
            <div class="course-rate-title text-heading">Total Rating</div>
            <div class="course-rate-total mt-16">
                <div class="course-rate-total__point">
                    <span class="course-rate-point heading">4.7</span>
                    <span class="course-rate-star">
                        <i class="fa-solid fa-star"></i>
                        <i class="fa-solid fa-star"></i>
                        <i class="fa-solid fa-star"></i>
                        <i class="fa-solid fa-star"></i>
                        <i class="fa-solid fa-star-half-stroke"></i>
                    </span>
                    <span class="rate-point-meaning">Course Quality</span>
                </div>
                <div class="course-rate-total__progress">
                    <div class="rate-progress-bar">
                        <div class="progress-bar">
                            <div class="progress-bar__container">
                                <span class="p-100"></span>
                            </div>
                            <div class="progress-value">
                                <span class="progress-star">
                                    <i class="fa-solid fa-star"></i>
                                    <i class="fa-solid fa-star"></i>
                                    <i class="fa-solid fa-star"></i>
                                    <i class="fa-solid fa-star"></i>
                                    <i class="fa-solid fa-star"></i>
                                </span>
                                <button type="button" class="progress-value__percent btn-restart">100%</button>
                            </div>
                        </div>
                        <div class="progress-bar">
                            <div class="progress-bar__container">
                                <span class="p-75"></span>
                            </div>
                            <div class="progress-value">
                                <span class="progress-star">
                                    <i class="fa-solid fa-star"></i>
                                    <i class="fa-solid fa-star"></i>
                                    <i class="fa-solid fa-star"></i>
                                    <i class="fa-solid fa-star"></i>
                                    <i class="fa-regular fa-star"></i>
                                </span>
                                <button type="button" class="progress-value__percent btn-restart">75%</button>
                            </div>
                        </div>
                        <div class="progress-bar">
                            <div class="progress-bar__container">
                                <span class="p-50"></span>
                            </div>

                            <div class="progress-value">
                                <span class="progress-star">
                                    <i class="fa-solid fa-star"></i>
                                    <i class="fa-solid fa-star"></i>
                                    <i class="fa-solid fa-star"></i>
                                    <i class="fa-regular fa-star"></i>
                                    <i class="fa-regular fa-star"></i>
                                </span>
                                <button type="button" class="progress-value__percent btn-restart">50%</button>
                            </div>

                        </div>
                        <div class="progress-bar">
                            <div class="progress-bar__container">
                                <span class="p-25"></span>
                            </div>
                            <div class="progress-value">
                                <span class="progress-star">
                                    <i class="fa-solid fa-star"></i>
                                    <i class="fa-solid fa-star"></i>
                                    <i class="fa-regular fa-star"></i>
                                    <i class="fa-regular fa-star"></i>
                                    <i class="fa-regular fa-star"></i>
                                </span>
                                <button type="button" class="progress-value__percent btn-restart">25%</button>
                            </div>
                        </div>
                        <div class="progress-bar">
                            <div class="progress-bar__container">
                                <span class="p-0"></span>
                            </div>
                            <div class="progress-value">
                                <span class="progress-star">
                                    <i class="fa-solid fa-star"></i>
                                    <i class="fa-regular fa-star"></i>
                                    <i class="fa-regular fa-star"></i>
                                    <i class="fa-regular fa-star"></i>
                                    <i class="fa-regular fa-star"></i>
                                </span>
                                <button type="button" class="progress-value__percent btn-restart">0%</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="course-details-rate__content">
            <div class="course-rate-title text-heading">Comments By Trainee</div>
            <div class="course-rate-content mt-16">
                @if (SignInManager.IsSignedIn(User) && isOwned)
                {
                    <div class="course-rate-content__comment">
                        <div class="rate-comment-container">
                            <form id="comment-form" class="rate-comment-form" method="post" enctype="application/x-www-form-urlencoded">
                                @Html.AntiForgeryToken()
                                <div asp-validation-summary="ModelOnly" class="text-danger text-medium"></div>
                                <input name="Comment.CommentMessage" type="text" id="comment-input" class="rate-comment-input text-normal" placeholder="Give Your Comment" />
                                <span asp-validation-for="Comment.CommentMessage" class="text-danger text-medium block mb-8"></span>
                                <select class="rate-comment-select text-normal" name="comment-rate-select">
                                    <option class="course-rate-option text-normal" value="5">5 Stars</option>
                                    <option class="course-rate-option text-normal" value="4">4 Stars</option>
                                    <option class="course-rate-option text-normal" value="3">3 Stars</option>
                                    <option class="course-rate-option text-normal" value="2">2 Stars</option>
                                    <option class="course-rate-option text-normal" value="1">1 Stars</option>
                                </select>

                                <input type="hidden" name="Comment.created_date" value="@DateTime.Now" />
                                <input type="hidden" name="Comment.updated_date" value="@DateTime.Now" />
                                <input type="hidden" name="Comment.UserId" value="@UserManager.GetUserId(User).ToString()" />
                                <input type="hidden" name="Comment.CourseId" value="@Model.Course.CourseId" />
                                @if (Model.Comments != null && Model.Comments.Count > 0)
                                {
                                    foreach (var comment in Model.Comments.OrderByDescending(c => c.created_date))
                                    {
                                        @if (SignInManager.IsSignedIn(User))
                                        {
                                            if (comment.UserId == UserManager.GetUserId(User).ToString())
                                            {
                                                isComment = true;
                                                break;
                                            }
                                        }
                                    }
                                }

                                @if (isComment)
                                {
                                    <button type="button" class="rate-comment-btn btn-restart comment-btn-disabled" id="submit-comment-btn">
                                        Submit
                                    </button>
                                }
                                else
                                {
                                    <button type="button" class="rate-comment-btn btn-restart" id="submit-comment-btn">
                                        Submit
                                    </button>
                                }
                            </form>
                        </div>
                    </div>
                }
                else
                {
                    <div class="course-rate-content__search">
                        <div class="rate-search-container">
                            <form class="rate-search-form" method="post" action="">
                                <input type="text" class="rate-search-input text-normal" placeholder="Search For Reviews" />
                                <button type="submit" class="rate-search-btn btn-restart text-heading">
                                    <i class="fa-solid fa-magnifying-glass"></i>
                                </button>
                            </form>
                        </div>
                        <div class="course-rate-filter">
                            <form class="course-rate-form" method="post" action="">
                                <select class="course-rate-filter__select text-normal" name="rate-select">
                                    <option class="course-rate-filter__option text-normal" value="0">All</option>
                                    <option class="course-rate-filter__option text-normal" value="5">5 Stars</option>
                                    <option class="course-rate-filter__option text-normal" value="4">4 Stars</option>
                                    <option class="course-rate-filter__option text-normal" value="3">3 Stars</option>
                                    <option class="course-rate-filter__option text-normal" value="2">2 Stars</option>
                                    <option class="course-rate-filter__option text-normal" value="1">1 Stars</option>
                                </select>
                            </form>
                        </div>
                    </div>
                }

                <div class="course-rate-content__container mt-16" id="course-comment-container">
                    @*                    <div class="course-rate-reviewer">
                    <div class="course-rate-image">
                    <span class="reviewer-img-text">
                    TS
                    </span>
                    </div>
                    <div class="course-rate-info">
                    <span class="course-rate-info__fullname">Thanh Sang</span>
                    <span class="course-rate-info__star">
                    <i class="fa-solid fa-star"></i>
                    <i class="fa-solid fa-star"></i>
                    <i class="fa-solid fa-star"></i>
                    <i class="fa-solid fa-star"></i>
                    <i class="fa-solid fa-star"></i>
                    </span>
                    <span class="course-rate-info__content mt-8">
                    Great course to get all the starting skills for Unity.
                    You clearly can build your own small game after each project of the course.
                    Well explained, interesting projects.
                    </span>
                    <div class="course-rate-info__action mt-8">
                    <button type="button" class="course-rate-reaction btn-restart">
                    <i class="fa-regular fa-thumbs-up"></i>
                    </button>
                    <button type="button" class="course-rate-reaction btn-restart ml-8">
                    <i class="fa-regular fa-thumbs-down"></i>
                    </button>
                    <div class="course-rate-report mt-16">
                    <div class="course-rate-report__container">
                    <button type="button" class="course-rate-report__btn btn-restart">
                    <i class="fa-regular fa-flag"></i>
                    </button>
                    <span class="course-rate-report__text">Report</span>
                    </div>
                    </div>
                    </div>
                    </div>
                    </div>*@

                    @if (Model.Comments != null && Model.Comments.Count > 0)
                    {
                        foreach (var comment in Model.Comments.OrderByDescending(c => c.created_date))
                        {
                            <div class="course-rate-reviewer">
                                <div class="course-rate-image">
                                    <span class="reviewer-img">
                                        <img src="/Assets/img/gamedevTV.jpg" class="reviewer-img__profile" alt="Reviewer Image" />
                                    </span>
                                </div>
                                <div class="course-rate-info">
                                    @if (SignInManager.IsSignedIn(User))
                                    {
                                        if (comment.UserId == UserManager.GetUserId(User).ToString())
                                        {
                                            <span class="course-rate-info__fullname">@*Codex*@@comment.User.UserName <strong>(You)</strong></span>
                                        }
                                        else
                                        {
                                            <span class="course-rate-info__fullname">@*Codex*@@comment.User.UserName</span>
                                        }
                                    }
                                    else
                                    {
                                        <span class="course-rate-info__fullname">@*Codex*@@comment.User.UserName</span>
                                    }

                                    <span class="course-rate-info__star">
                                        <i class="fa-solid fa-star"></i>
                                        <i class="fa-solid fa-star"></i>
                                        <i class="fa-solid fa-star"></i>
                                        <i class="fa-solid fa-star"></i>
                                        <i class="fa-solid fa-star"></i>
                                    </span>
                                    <span class="course-rate-info__content mt-8">
                                        @*                                        I am totally new to this course
                                and barely worked on C# and Unity but
                                the knowledge that I got here helped
                                channel my thinking with regards to doing
                                things I haven't done before. I did enjoy the course .
                                Will have to practice a lot on my own to
                                make sure the concepts were fully grasped.
                                Thanks very much guys.*@
                                        @comment.CommentMessage
                                    </span>
                                    <div class="course-rate-info__action mt-8">
                                        <button type="button" class="course-rate-reaction btn-restart">
                                            <i class="fa-regular fa-thumbs-up"></i>
                                        </button>
                                        <button type="button" class="course-rate-reaction btn-restart ml-8">
                                            <i class="fa-regular fa-thumbs-down"></i>
                                        </button>
                                        <div class="course-rate-report mt-16">
                                            <div class="course-rate-report__container">
                                                <button type="button" class="course-rate-report__btn btn-restart">
                                                    <i class="fa-regular fa-flag"></i>
                                                </button>
                                                <span class="course-rate-report__text">Report</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="course-rate-reviewer" id="comment-not-found">
                            No Comment Fond In This Course.
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script type="text/javascript">
        // Toggle Show/ Hide Course Chapter
        const chapterBtns = document.querySelectorAll(".course-chapter-btn");

        if (chapterBtns[0]) {
            if (chapterBtns[0].parentElement.parentElement.nextElementSibling) {
                if (!chapterBtns[0].parentElement.parentElement.nextElementSibling.classList.contains("show")) {
                    chapterBtns[0].parentElement.parentElement.nextElementSibling.classList.add("show");
                }
            }
        }

        chapterBtns.forEach(item => {
            item.addEventListener("click", function () {
                if (item.parentElement.parentElement.nextElementSibling) {
                    item.parentElement.parentElement.nextElementSibling.classList.toggle("show");
                }
            });
        });

        // Toggle Show More/ Show less contributor paragraph
        const dots = document.getElementById("dots");
        const paragraphMore = document.getElementById("paragraph-more");
        const toggleParagraphBtn = document.getElementById("toggle-paragraph-btn");

        toggleParagraphBtn.addEventListener("click", function () {
            if (dots.style.display == "none") {
                dots.style.display = "inline";
                paragraphMore.style.display = "none";
                toggleParagraphBtn.innerHTML = "Read more" + "<i class='fa-solid fa-angle-up ml-8'></i>";
                if (toggleParagraphBtn.lastElementChild.classList.contains("fa-angle-up")) {
                    toggleParagraphBtn.lastElementChild.classList.replace("fa-angle-up", "fa-angle-down");
                }

            } else {
                dots.style.display = "none";
                paragraphMore.style.display = "block";
                toggleParagraphBtn.innerHTML = "Read less" + "<i class='fa-solid fa-angle-down ml-8'></i>";
                if (toggleParagraphBtn.lastElementChild.classList.contains("fa-angle-down")) {
                    toggleParagraphBtn.lastElementChild.classList.replace("fa-angle-down", "fa-angle-up");
                }
            }
        });




        // Tree View For Exercises
        //const exerciseLists = document.querySelectorAll(".course-exercise-list");
        //let listHeight = 0;
        ////let itemsHeight = 0;
        //let countItems = 0;

        //if (exerciseLists) {
        //    exerciseLists.forEach(item => {
        //        // Tree View For List and Item
        //        if (item) {
        //            CreateItemTreeView(item);
        //        }
        //    });
        //}

        // List,item height and count Item for Tree View Exercises
        let listHeight = 0;
        //let itemsHeight = 0;
        let countItems = 0;

        // Toggle Expand Exercise List
        const expandExerciseBtns = document.querySelectorAll(".lesson-expand-exercises_btn");
        expandExerciseBtns.forEach(item => {
            item.addEventListener("click", function () {
                ToggleExpandExercise(item);

                // Display Tree View
                const exerciseLists = document.querySelectorAll(".course-exercise-list");
                if (exerciseLists) {
                    exerciseLists.forEach(item => {
                        // Tree View For List and Item
                        if (item) {
                            CreateItemTreeView(item);
                        }
                    });
                }
            });
        });

        // Handle Add Css Scope for Course Overview "p" element and class
        const courseOverviewContainer = document.querySelector(".course-overview__content");
        if (courseOverviewContainer.children) {
            for (let i = 0; i < courseOverviewContainer.children.length; i++) {
                courseOverviewContainer.children[i].setAttribute("custom-page-course-details", "");
                const tagName = courseOverviewContainer.children[i].tagName.toLowerCase();
                if (tagName == "p") {
                    courseOverviewContainer.children[i].classList.add("course-overview-text");
                }

            }
        }

        // Handle Count Item For Course Include
        const courseIncludeValue = document.getElementById("course-include-value");
        const IncludeItem = courseIncludeValue.innerHTML.split(',');
        if (IncludeItem.length > 0) {
            let courseChapter = 0;
            let courseLesson = 0;
            let countChapterAndLesson = 0;
            for (let i = 0; i < IncludeItem.length; i++) {
                if (IncludeItem[i].match("totalHours")) {
                    const courseIncludeTime = document.getElementById("course-include-time");
                    courseIncludeTime.innerHTML = Number.parseFloat(IncludeItem[i].slice(IncludeItem[i].indexOf(':') + 1)) + " " + "hours / total";
                }
                else if (IncludeItem[i].match("files")) {
                    const courseIncludeFile = document.getElementById("course-include-file");
                    courseIncludeFile.innerHTML = Number.parseFloat(IncludeItem[i].slice(IncludeItem[i].indexOf(':') + 1)) + " " + "items";
                }
                else if (IncludeItem[i].match("referencesLink")) {
                    const courseIncludeResource = document.getElementById("course-include-resource");
                    courseIncludeResource.innerHTML = Number.parseFloat(IncludeItem[i].slice(IncludeItem[i].indexOf(':') + 1)) + " " + "Reference Resources";
                }
                else if (IncludeItem[i].match("chapters") || IncludeItem[i].match("lessons")) {
                    ++countChapterAndLesson;
                    if (IncludeItem[i].match("chapters")) {
                        courseChapter = Number.parseFloat(IncludeItem[i].slice(IncludeItem[i].indexOf(':') + 1));
                    }
                    if (IncludeItem[i].match("lessons")) {
                        courseLesson = Number.parseFloat(IncludeItem[i].slice(IncludeItem[i].indexOf(':') + 1));
                    }
                    if (countChapterAndLesson == 2) {
                        const courseIncludeChapterAndLesson = document.getElementById("course-include-chapter");
                        if (courseChapter <= 1 && courseChapter >= 0 && courseLesson <= 1 && courseLesson >= 0) {
                            courseIncludeChapterAndLesson.innerHTML = courseChapter + " " + "chapter" + " - " + courseLesson + " " + "lesson";
                        } else if (courseChapter > 1 && courseLesson == 1) {
                            courseIncludeChapterAndLesson.innerHTML = courseChapter + " " + "chapters" + " - " + courseLesson + " " + "lesson";
                        } else if (courseChapter == 1 && courseLesson > 1) {
                            courseIncludeChapterAndLesson.innerHTML = courseChapter + " " + "chapter" + " - " + courseLesson + " " + "lessons";
                        } else if (courseChapter > 1 && courseLesson > 1) {
                            courseIncludeChapterAndLesson.innerHTML = courseChapter + " " + "chapters" + " - " + courseLesson + " " + "lessons";
                        }
                    }
                }
                else if (IncludeItem[i].match("exercises")) {
                    const courseIncludeExercise = document.getElementById("course-include-exercise");
                    courseIncludeExercise.innerHTML = Number.parseFloat(IncludeItem[i].slice(IncludeItem[i].indexOf(':') + 1)) + " " + "exercises / total";
                }
                else if (IncludeItem[i].match("crossplatAccess")) {
                    const courseIncludeAccess = document.getElementById("course-include-access");
                    if (IncludeItem[i].slice(IncludeItem[i].indexOf(':') + 1) == "all") {
                        courseIncludeAccess.innerHTML = "PC / Mobile / Tivi,etc... (unlimited access)";
                    }

                }
                else if (IncludeItem[i].match("completeCertificate")) {
                    const courseIncludeCertificate = document.getElementById("course-include-certificate");
                    if (IncludeItem[i].slice(IncludeItem[i].indexOf(':') + 1) == "yes") {
                        courseIncludeCertificate.innerHTML = "Complete Course Certificate";
                    } else {
                        courseIncludeCertificate.innerHTML = "No Complete Course Certificate";
                    }
                }
            }
        }

        // Function: Create Tree View For Item
        function CreateItemTreeView(ulList) {
            if (ulList.tagName.toLowerCase() == "ul") {
                CalculateHeight(ulList);
                if (listHeight != 0) {
                    ulList.style.setProperty('--Listheight', `${listHeight}px`);
                    for (let i = 0; i < ulList.children.length; i++) {
                        ulList.children[i].style.setProperty('--Itemheight', `${ulList.children[i].clientHeight / 2}px`);
                    }

                    // Reset List Height
                    listHeight = 0;
                }
            }
        }

        // Function: Calculate height for list and items
        function CalculateHeight(list) {
            for (let i = 0; i < list.children.length; i++) {
                ++countItems;
                if (countItems == list.children.length) {
                    listHeight += (list.children[i].clientHeight / 2) + 1;
                } else {
                    listHeight += list.children[i].clientHeight;
                }
            }

            // Reset Count Items
            countItems = 0;
        }

        // Function: Toggle Expand Exercise
        function ToggleExpandExercise(expandExerciseButton) {
            const exerciseLists = document.querySelectorAll(".course-exercise-list");
            exerciseLists.forEach(item => {
                if (item.getAttribute("id")) {
                    if (item.getAttribute("id").slice(item.getAttribute("id").lastIndexOf('-') + 1) == expandExerciseButton.getAttribute("id").slice(expandExerciseButton.getAttribute("id").lastIndexOf('-') + 1)) {
                        item.classList.toggle("show");
                    }
                }
            });
        }


        // Post Form Comment
        var submitCommentBtn = document.getElementById("submit-comment-btn");
        if (submitCommentBtn != null) {
            submitCommentBtn.addEventListener("click", function () {
                // Create an XMLHttpRequest object
                const xhttp = new XMLHttpRequest();

                // Define a callback function
                xhttp.onload = function () {
                    if (xhttp.status === 200) {
                        // What to do when the response is ready
                        let response = JSON.parse(xhttp.responseText);
                        if (response != undefined && response != null) {
                            console.log(response);
                            document.getElementById("comment-input").value = null;
                            submitCommentBtn.classList.add("comment-btn-disabled");
                            let html = `
                                                                                                                                                                     <div class="course-rate-reviewer">
                                                                                                                                                                        <div class="course-rate-image">
                                                                                                                                                                            <span class="reviewer-img">
                                                                                                                                                                                <img src="/Assets/img/gamedevTV.jpg" class="reviewer-img__profile" alt="Reviewer Image" />
                                                                                                                                                                            </span>
                                                                                                                                                                        </div>
                                                                                                                                                                        <div class="course-rate-info">
                                                                                                                                                                            <span class="course-rate-info__fullname">Codex</span>
                                                                                                                                                                            <span class="course-rate-info__star">
                                                                                                                                                                                <i class="fa-solid fa-star"></i>
                                                                                                                                                                                <i class="fa-solid fa-star"></i>
                                                                                                                                                                                <i class="fa-solid fa-star"></i>
                                                                                                                                                                                <i class="fa-solid fa-star"></i>
                                                                                                                                                                                <i class="fa-solid fa-star"></i>
                                                                                                                                                                            </span>
                                                                                                                                                                            <span class="course-rate-info__content mt-8">
                                                                                                                                                                                I am totally new to this course
                                                                                                                                                                                and barely worked on C# and Unity but
                                                                                                                                                                                the knowledge that I got here helped
                                                                                                                                                                                channel my thinking with regards to doing
                                                                                                                                                                                things I haven't done before. I did enjoy the course .
                                                                                                                                                                                Will have to practice a lot on my own to
                                                                                                                                                                                make sure the concepts were fully grasped.
                                                                                                                                                                                Thanks very much guys.
                                                                                                                                                                            </span>
                                                                                                                                                                            <div class="course-rate-info__action mt-8">
                                                                                                                                                                                <button type="button" class="course-rate-reaction btn-restart">
                                                                                                                                                                                    <i class="fa-regular fa-thumbs-up"></i>
                                                                                                                                                                                </button>
                                                                                                                                                                                <button type="button" class="course-rate-reaction btn-restart ml-8">
                                                                                                                                                                                    <i class="fa-regular fa-thumbs-down"></i>
                                                                                                                                                                                </button>
                                                                                                                                                                                <div class="course-rate-report mt-16">
                                                                                                                                                                                    <div class="course-rate-report__container">
                                                                                                                                                                                        <button type="button" class="course-rate-report__btn btn-restart">
                                                                                                                                                                                            <i class="fa-regular fa-flag"></i>
                                                                                                                                                                                        </button>
                                                                                                                                                                                        <span class="course-rate-report__text">Report</span>
                                                                                                                                                                                    </div>
                                                                                                                                                                                </div>
                                                                                                                                                                            </div>
                                                                                                                                                                        </div>
                                                                                                                                                                    </div>
                                                                                                                                                                `;
                            const parentDiv = document.getElementById("course-comment-container");

                            // Create "div" node
                            const div = document.createElement("div");

                            // Add Class For "div" node
                            div.classList.add("course-rate-reviewer");
                            div.setAttribute("custom-page-course-details", "");

                            for (let i = 1; i <= 2; i++) {
                                // Create "childDiv" node
                                const childDiv = document.createElement("div");

                                if (i == 1) {
                                    // Add Class For "childDiv" node
                                    childDiv.classList.add("course-rate-image");
                                    childDiv.setAttribute("custom-page-course-details", "");

                                    // Create "span" node
                                    const span = document.createElement("span");

                                    // Add Class For "span" node
                                    span.classList.add("reviewer-img");
                                    span.setAttribute("custom-page-course-details", "");

                                    // Create "img" node
                                    const img = document.createElement("img");

                                    // Add Class For "img" node
                                    img.src = "/Assets/img/gamedevTV.jpg";
                                    img.alt = "Reviewer Image";
                                    img.classList.add("reviewer-img__profile");
                                    img.setAttribute("custom-page-course-details", "");

                                    span.appendChild(img);
                                    childDiv.appendChild(span);
                                } else {
                                    // Add Class For "childDiv" node
                                    childDiv.classList.add("course-rate-info");
                                    childDiv.setAttribute("custom-page-course-details", "");

                                    for (let j = 1; j <= 3; j++) {
                                        // Create "span" node
                                        const span = document.createElement("span");

                                        if (j == 1) {
                                            // Add Class For "span" node
                                            span.classList.add("course-rate-info__fullname");
                                            span.setAttribute("custom-page-course-details", "");
        @if (SignInManager.IsSignedIn(User))
        {
            UserName = @UserManager.GetUserName(User).ToString();
        }
                                                span.innerHTML = "@UserName" + "<strong>(You)</strong>";
                                        }
                                        else if (j == 2) {
                                            // Add Class For "span" node
                                            span.classList.add("course-rate-info__star");
                                            span.setAttribute("custom-page-course-details", "");

                                            for (let k = 1; k <= 5; k++) {
                                                // Create "icon" node
                                                const icon = document.createElement("i");

                                                // Add Class For "icon" node
                                                icon.classList.add("fa-solid", "fa-star");
                                                icon.setAttribute("custom-page-course-details", "");
                                                span.appendChild(icon);
                                            }
                                        } else {
                                            // Add Class For "span" node
                                            span.classList.add("course-rate-info__content", "mt-8");
                                            span.setAttribute("custom-page-course-details", "");
                                            span.innerHTML = response.commentMessage;
                                        }

                                        childDiv.appendChild(span);
                                    }

                                    // Create "childDiv2" node
                                    const childDiv2 = document.createElement("div");

                                    // Add Class For "childDiv2" node
                                    childDiv2.classList.add("course-rate-info__action", "mt-8");
                                    childDiv2.setAttribute("custom-page-course-details", "");

                                    for (let j = 1; j <= 2; j++) {
                                        // Create "button" node
                                        const button = document.createElement("button");
                                        button.type = "button";

                                        // Create "icon" node
                                        const icon = document.createElement("i");

                                        if (j == 1) {
                                            // Add Class For "button" node
                                            button.classList.add("course-rate-reaction", "btn-restart");
                                            button.setAttribute("custom-page-course-details", "");

                                            // Add Class For "icon" node
                                            icon.classList.add("fa-regular", "fa-thumbs-up");
                                            icon.setAttribute("custom-page-course-details", "");
                                        } else {
                                            // Add Class For "button" node
                                            button.classList.add("course-rate-reaction", "btn-restart", "ml-8");
                                            button.setAttribute("custom-page-course-details", "");
                                            // Add Class For "icon" node
                                            icon.classList.add("fa-regular", "fa-thumbs-down");
                                            icon.setAttribute("custom-page-course-details", "");
                                        }

                                        button.appendChild(icon);
                                        childDiv2.appendChild(button);
                                    }

                                    // Create "childDiv3" node
                                    const childDiv3 = document.createElement("div");

                                    // Add Class For "childDiv3" node
                                    childDiv3.classList.add("course-rate-report", "mt-16");
                                    childDiv3.setAttribute("custom-page-course-details", "");

                                    // Create "childDiv4" node
                                    const childDiv4 = document.createElement("div");

                                    // Add Class For "childDiv3" node
                                    childDiv4.classList.add("course-rate-report__container");
                                    childDiv4.setAttribute("custom-page-course-details", "");

                                    // Create "button" node
                                    const button = document.createElement("button");
                                    button.type = "button";

                                    // Add Class For "button" node
                                    button.classList.add("course-rate-report__btn", "btn-restart");
                                    button.setAttribute("custom-page-course-details", "");

                                    // Create "icon" node
                                    const icon = document.createElement("i");

                                    // Add Class For "icon" node
                                    icon.classList.add("fa-regular", "fa-flag");
                                    icon.setAttribute("custom-page-course-details", "");

                                    // Create "span" node
                                    const span = document.createElement("span");

                                    // Add Class For "span" node
                                    span.classList.add("course-rate-report__text");
                                    span.setAttribute("custom-page-course-details", "");
                                    span.innerHTML = "Report";

                                    button.appendChild(icon);
                                    childDiv4.appendChild(button);
                                    childDiv4.appendChild(span);
                                    childDiv3.appendChild(childDiv4);
                                    childDiv2.appendChild(childDiv3);
                                    childDiv.appendChild(childDiv2);
                                }

                                div.appendChild(childDiv);
                            }
                            parentDiv.appendChild(div);
                            if (document.getElementById("comment-not-found") != null) {
                                parentDiv.removeChild(document.getElementById("comment-not-found"));
                            }
                        } else {
                            alert("Data Not Found.");
                        }
                    } else {
                        //alert(xhttp.status);
                        if(xhttp.status == 204)
                        {
                            alert("Cannot Submit Comment \"You are only allowed to comment once.\"");
                        } else {
                            alert("Cannot Submit Comment \"Invalid Request Information.\"");
                        }
                        
                    }
                }

                //let url = editForm.action;
                let url = "/course/details?id=" + @Model.Course.CourseId;
                let data = new FormData(document.getElementById("comment-form"));

                // Send a request
                xhttp.open("POST", url);
                xhttp.setRequestHeader("RequestVerificationToken", data.get('__RequestVerificationToken'));
                xhttp.send(data);
            });
        }
    </script>
}